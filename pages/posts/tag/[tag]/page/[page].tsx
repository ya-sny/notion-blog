import Head from 'next/head'
import {getAllTags, getNumberOfPagesByTag, getPostsByTagAndPage} from '../../../../../lib/notionAPI';
import SinglePost from '../../../../../components/Post/SinglePost';
import Pagination from '../../../../../components/Pagination/Pagination';
import {GetStaticPaths} from 'next';
import Tag from '../../../../../components/Tag/Tag';

export const getStaticPaths: GetStaticPaths = async () => {
  const allTags = await getAllTags();

  let params = [];
  await Promise.all(
    allTags.map((tag: string) => {
      return getNumberOfPagesByTag(tag).then((numberOfPageByTag: number) => {
        for (let i = 1; i <= numberOfPageByTag; i++) {
          params.push({params: {tag: tag, page: i.toString()}});
        }
      });
    })
  );

  return {
    paths: params,
    fallback: "blocking",
  };
};

export const getStaticProps = async (context) => {
  const currentPage: string = context.params?.page;
  const currentTag: string = context.params?.tag.toString();
  const upperCaseCurrentTag: string = currentTag.charAt(0).toUpperCase() + currentTag.slice(1);
  const posts = await getPostsByTagAndPage(upperCaseCurrentTag, parseInt(currentPage, 10));
  const numberOfPageByTag = await getNumberOfPagesByTag(upperCaseCurrentTag);
  const allTags = await getAllTags();

  return {
    props: {
      posts,
      numberOfPageByTag,
      currentTag,
      allTags,
    },
    revalidate: 60 * 60 * 6,
  }
}

const BlogTagPageList = ({numberOfPageByTag, posts, currentTag, allTags}) => {
  return (
    <div className="container h-full w-full mx-auto">
      <Head>
        <title>Notion-blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container w-full mt-16">
        <h1 className="text-5xl font-medium text-center mb-16">
          Notion Blog
        </h1>
        <section className="w-5/6 gap-3 mx-auto">
          {posts.map((post) => (
            <div key={post.id}>
              <SinglePost
                title={post.title}
                description={post.description}
                date={post.date}
                tags={post.tags}
                slug={post.slug}
                isPaginationPage={true}
              />
            </div>
          ))}
        </section>
        <Pagination numberOfPage={numberOfPageByTag} tag={currentTag}/>
        <Tag tags={allTags}/>
      </main>
    </div>
  )
}

export default BlogTagPageList;
